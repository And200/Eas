

application {
config {
        baseName easyparking
        applicationType monolith
        packageName co.edu.sena
        authenticationType jwt
        devDatabaseType mysql
        prodDatabaseType mysql
        cacheProvider no
        buildTool maven
        clientFramework angularX
        enableTranslation true
        nativeLanguage es
        languages [en, es]
        //websocket spring-websocket
        //testFrameworks [cucumber]
        //entitySuffix false
        jhiPrefix easyparking
        reactive false
        serverPort 8080
        searchEngine false
        clientTheme slate
        clientThemeVariant primary
    }
     entities *
    }

    entity Empleado {
    NombreEmpleado String required maxlength (20) unique
    ApellidoEmpleado String maxlength (20) unique
    CargoEmpleado String required maxlength (20) unique
    Phone String required maxlength (20) unique
    }
   
    entity Cliente{
    NombreCliente  String required maxlength (25) unique
    Apellidocliente String required maxlength (25) unique
    BloqueCliente String required maxlength (25) unique
    Phone String required maxlength (25) unique
    CorreoCliente String required maxlength (25) unique
   
    }
   
    entity Visitante{
    Nombrevisitante String required maxlength (25) unique
    Apellido String maxlength (25) unique
    Phone String required maxlength (25) unique
    }
   
    entity FormaDePago{
    FormaPago String required maxlength (20) unique
    }
   
    entity Facturacion{
    FechaFactura LocalDate required unique
    ValorFactura Float   required  unique
   
    }
   
    entity TipoVehiculo{
    TipoVehiculo String required maxlength (25) unique
    MarcaVehiculo String required maxlength (25) unique
    }
   
    entity Vehiculo{
    Placa String required maxlength (20) unique
    }
   
    entity Registro {
    HoraIngreso ZonedDateTime required  unique
    HoraSalida ZonedDateTime required  unique
    }
   
 
     
   
   
   
    relationship OneToMany{
    TipoVehiculo to Vehiculo {tipoVehiculo(MarcaVehiculo) required}
    Registro to Vehiculo {registro(HoraIngreso) required}
    Registro to Facturacion {registro(HoraIngreso) required}
    Cliente to Facturacion {cliente(NombreCliente) required}
    Visitante to Facturacion {visitante(Nombrevisitante) required}
    Empleado to Facturacion {empleado(NombreEmpleado) required}
    FormaDePago to Facturacion {formaDePago(FormaPago) required}
   
   
    }